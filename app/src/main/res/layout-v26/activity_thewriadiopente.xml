<?xml version="1.0" encoding="utf-8"?>

<android.support.v4.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <android.support.constraint.ConstraintLayout


        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@color/colorPrimary">


        <TextView
            android:id="@+id/textView4"
            android:layout_width="385dp"
            android:layout_height="0dp"
            android:layout_marginStart="40dp"
            android:layout_marginTop="8dp"
            android:text="2.5 ΜΕΘΟΔΟΣ ΔΙΑΙΡΕΙ ΚΑΙ ΒΑΣΙΛΕΥΕ "
            android:textColor="@color/menubutons"
            android:textSize="20dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/textView5"
            android:layout_width="344dp"
            android:layout_height="61dp"
            android:layout_marginStart="42dp"
            android:layout_marginTop="24dp"
            android:text="Tι ορίζουμε ως μέθοδο διαίρει και βασίλευε?"
            android:textColor="@color/menubutons"
            android:textSize="19dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/textView4" />

        <TextView
            android:id="@+id/textView6"
            android:layout_width="346dp"
            android:layout_height="258dp"

            android:layout_marginStart="18dp"
            android:layout_marginTop="24dp"
            android:background="@drawable/back"
            android:text="Στην κατηγορία Διαίρει και Βασίλευε(divide and conquer) εντάσσονται οι τεχνικές που υποδιαιρούν ένα πρόβλημα σε μικρότερα υποπροβλήματα, που έχουν την ίδια τυποποίηση με το αρχικό πρόβλημα αλλά είναι μικρότερα σε μέγεθος. Με όμοιο τρόπο, τα υπο-προβλήματα αυτά μπορούν να διαιρεθούν σε ακόμη μικρότερα υποπροβλήματα κ.ο.κ. Έτσι η επίλυση ενός προβλήματος έγκειται στη σταδιακή επίλυση των όσο το δυνατόν μικρότερων υποπροβλημάτων, ώστε τελικά να καταλήξουμε στη συνολική λύση του αρχικού ευρύτερου προβλήματος. Αυτή η προσέγγιση ονομάζεται από επάνω προς τα κάτω (top-down)."

            android:textColor="@color/menuColor"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/textView5" />

        <TextView
            android:id="@+id/textView7"
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:layout_marginTop="20dp"
            android:text="Σύντομη περιγραφή της μεθόδου"
            android:textColor="@color/menubutons"
            android:textSize="19dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/textView6" />

        <Button
            android:id="@+id/button25"
            style="@style/Base.Widget.AppCompat.Button.Borderless"
            android:layout_width="146dp"
            android:layout_height="63dp"

            android:layout_marginStart="24dp"
            android:layout_marginTop="1012dp"
            android:layout_marginEnd="16dp"
            android:background="@color/colorigotit"
            android:text="Το κατάλαβα !"
            android:textColor="@color/menubutons"
            android:textSize="15sp"
            android:textStyle="bold"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.653"
            app:layout_constraintStart_toEndOf="@+id/checkBox25"
            app:layout_constraintTop_toBottomOf="@+id/krithriaalgorithgmou" />

        <TextView
            android:id="@+id/krithriaalgorithgmou"
            android:layout_width="match_parent"
            android:layout_height="247dp"
            android:layout_marginTop="31dp"

            android:background="@drawable/back"
            android:text="Η περιγραφή αυτής της μεθόδου σχεδίασης αλγορίθμων μπορεί να αποδοθεί με τα επόμενα βήματα:
Ê Δίνεται για επίλυση ένα στιγμιότυπο ενός προβλήματος.
Ë Υποδιαιρείται το στιγμιότυπο του προβλήματος σε υπο-στιγμιότυπα
του ίδιου προβλήματος.
Ì Δίνεται ανεξάρτητη λύση σε κάθε ένα υπο-στιγμιότυπο.
Í Συνδυάζονται όλες οι μερικές λύσεις που βρέθηκαν για τα υπο-στιγμιότυπα, έτσι ώστε να δοθεί η συνολική λύση του προβλήματος."
            android:textColor="@color/menuColor"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/textView7" />

        <TextView
            android:id="@+id/kanonesonomasias"
            android:layout_width="wrap_content"
            android:layout_height="0dp"
            android:layout_marginStart="8dp"
            android:layout_marginTop="15dp"
            android:text="Δυαδική αναζήτηση και μέθοδος διαιρει και βασίλευε-Παράδειγμα"
            android:textColor="@color/menubutons"
            android:textSize="19dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/krithriaalgorithgmou" />

        <TextView
            android:id="@+id/textView38"
            android:layout_width="wrap_content"
            android:layout_height="606dp"
            android:layout_marginTop="21dp"
            android:background="@drawable/back"


            android:text="Έστω ότι δίνεται ένας ηλεκτρονικός τηλεφωνικός κατάλογος, δηλαδή
ένας πίνακας με n ονόματα και έναν αριθμό τηλεφώνου για κάθε όνομα. Ο κατάλογος είναι ταξινομημένος κατά αύξουσα αλφαβητική τάξη
ως προς τα ονόματα. Έστω ότι τα n ονόματα με τα αντίστοιχα τηλέφωνα
είναι αποθηκευμένα σε δύο πίνακες: names[1 ..n] και phones[1 ..n] αντίστοιχα. Σε μία τέτοια περίπτωση, λοιπόν, το ζητούμενο είναι να βρεθεί
το τηλέφωνο που αντιστοιχεί σε δεδομένο όνομα συνδρομητή (υποθέτοντας ότι το δεδομένο αναζητούμενο όνομα πράγματι υπάρχει στον
κατάλογο).
Το πρόβλημα επιλύεται με τη μέθοδο Διαίρει και Βασίλευε με βάση την
παρατήρηση ότι, όταν δοθεί ένα όνομα, τότε υπάρχουν οι εξής 3 περιπτώσεις:
Ê το όνομα βρίσκεται στη μεσαία θέση του πίνακα names,
Ë το όνομα βρίσκεται σε μία θέση στο πρώτο μισό κομμάτι του πίνακα
names, ή
Ì το όνομα βρίσκεται σε μία θέση στο δεύτερο μισό κομμάτι του πίνακα names.
Η παρατήρηση αυτή οδηγεί στη σύνταξη του επόμενου αλγορίθμου. Σημειώνεται ότι ο αλγόριθμος αυτός ισχύει μόνο για την περίπτωση που
το αναζητούμενο όνομα υπάρχει στον κατάλογο (δηλαδή, στον πίνακα
names). Ο αλγόριθμος αυτός μπορεί εύκολα να τροποποιηθεί ώστε να
αντιμετωπίζει και την περίπτωση της ανεπιτυχούς αναζήτησης, δηλαδή
της περίπτωσης όπου το αναζητούμενο όνομα δεν υπάρχει στον πίνακα."
            android:textColor="@color/menuColor"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/kanonesonomasias" />

        <TextView
            android:id="@+id/textView39"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="16dp"
            android:text="Σύνταξη Αλγορίθμου"
            android:textColor="@color/menubutons"
            android:textSize="19dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/textView38" />

        <TextView
            android:id="@+id/textView40"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:background="@drawable/back"


            android:text="Αλγόριθμος Δυαδική_αναζήτηση
Δεδομένα // names, phones, onoma, arxi, telos //
meso ← [arhi + telos]/2
Av onoma = names[meso] τότε
Tel ← phones[meso]
αλλιώς
Av onoma μεγαλύτερο απο names[meso] τότε
Δυαδική_αναζήτηση(names, phones, onoma, arhi, meso-1)
αλλιώς
Δυαδική_αναζήτηση(names,phones,onoma,meso+1,telos)
Τέλος_αν
Τέλος_αν
Αποτελέσματα // Tel //
Τέλος Δυαδική_αναζήτηση"
            android:textColor="@color/menuColor"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/textView39" />

        <CheckBox
            android:id="@+id/checkBox25"
            android:layout_width="199dp"
            android:layout_height="116dp"
            android:layout_marginTop="984dp"
            android:text="θέλεις να αποθηκευσεις αυτο το κεφάλαιο για επανάληψη?"
            android:textColor="@color/menubutons"
            android:textSize="19dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/krithriaalgorithgmou" />


    </android.support.constraint.ConstraintLayout>
</android.support.v4.widget.NestedScrollView>