package com.nikosval.aepp;

import java.util.Arrays;
import java.util.Collections;
import java.util.Random;

public class QuestionLibraryk3 {

    private String multipleQuestions[] = {
            "Τα στοιχεία των στατικών δομών δεδομένων αποθηκεύονται σε μη συνεχόμενες θέσεις μνήμης.",
            "Δεν υπάρχουν δομές δεδομένων δευτερεύουσας μνήμης.",
            "Τα στοιχεία ενος τετραγωνικού πίνακα με ίδο αριθμό γραμμής και στήλη; βρίσκονται πάνω στην κύρια διαγώνιο.",
            "Σε ποιά κατηγορία δεδομένων ανήκει ο πίνακας?",
            "Ποια δομή επανάληψης χρησιμοποιούμε για να προσπελάσουμε έναν πίνακα?",
            "Έστω ο πίνακας ακεραίων Α[10]. Η εντολή Σ <- Α[10] εκχωρεί στη μεταβλητή Σ το άθροισμα όλων των στοιχείων του πίνακα Α.",
            "Στη στοίβα, ο ίδιος δείκτης μάς δίνει, τόσο τη θέση του στοιχείου που μπορεί να εξαχθεί, όσο και τη θέση εκείνου που εισήλθε τελευταίο.",
            "Στην ουρά,ισχυεί ότι   ",
            " Η σειριακή αναζήτηση μπορεί να οδηγήσει στην προσπέλαση ακόμη και ολόκληρου του πίνακα",
            " Η σειριακή αναζήτηση μπορεί να εκτελεστεί μόνο σε μη ταξινομημένους πίνακες",
            "Η ταξινόμηση της φυσαλίδας ταξινομεί τα στοιχεία ενός μονοδιάστατου πίνακα μόνο σε αύξουσα σειρά.",
            "Η ταξινόμηση δεν μπορεί να εφαρμοστεί σε δισδιάστατους πίνακες",
            "Υποχείλιση συμβαίνει όταν εισαχθεί τιμή σε μια γεμάτη στοίβα",
            "Σε μια ουρά απαιτούνται δυο δείκτες, front και rear",
            "Στη στοίβα το στοιχείο που εισάγεται τελευταίο εξάγεται και τελευταίο",
            " Θεωρούμε πίνακα Α διάστασης 3x3, όπου το A[i,j] στοιχείο δίνεται από τον τύπο A[i, j]=i*j.  Να βρεθεί τι θα τυπώσει το παρακάτω τμήμα αλγορίθμου:\n" +
                    "s ← 0\n" +
                    "p ← 1\n" +
                    "Για i από 1 μέχρι 3\n" +
                    "    s ← s + A[i, i]\n" +
                    "    p ← p * A[i, i]\n" +
                    "Τέλος_Επανάληψης\n" +
                    "Εκτύπωσε “s=”, s, “p=”, p",
            " Έστω ο πίνακας Α που περιέχει με την σειρά τους 100  πρώτους άρτιους αριθμούς,  (δηλ. 2,4,6,8,...), μετά την εκτέλεση του κάτωθι τμήματος αλγορίθμου:\n" +
                    "s ← 0\n" +
                    "Για i από 1 μέχρι n\n" +
                    "    s ←s + A[Α[2*i]] \n" +
                    "Τέλος_επανάληψης\n" +
                    "αν  το s=80  , τι τιμή θα έχει το n;",
            "Η σειριακή αναζήτηση και η δυαδική αναζήτηση μπορούν να χρησιμοποιηθούν σε όλους τους μονοδιάστατους πίνακες",
            "Η πληροφορική ως επιστήμη μελετά τους αλγορίθμους σε σχέση με την έννοια των δεδομένων από τη σκοπιά:",
            "Ένας πίνακας που χρησιμοποιεί δύο δείκτες για τον πλήρη προσδιορισμό της θέσης του κάθε στοιχείου του είναι πάντα"







    };

    private String manswers[][] = {
            {"Σωστό", "Λάθος",},
            {"Σωστό", "Λάθος"},
            {"Σωστό", "Λάθος",},
            {"Δυναμική","Στατική"},
            {"ΟΣΟ...ΕΠΑΝΕΛΑΒΕ","ΜΕΧΡΙΣ_ΟΤΟΥ","ΓΙΑ...ΑΠΟ...ΜΕΧΡΙ"},
            {"Σωστό","Λάθος"},
            {"Σωστό", "Λάθος",},
            {"FIFO(FIRST IN FIRST OUT)","LIFO(LAST IN FIRST OUT"},
            {"Σωστό","Λάθος"},
            {"Σωστό","Λάθος"},
            {"Σωστό", "Λάθος",},
            {"Σωστό", "Λάθος",},
            {"Σωστό", "Λάθος",},
            {"Σωστό", "Λάθος",},
            {"Σωστό", "Λάθος",},
            {"s=12  p=48 "," s=14  p=36 ","s=55  p= 108 "},
            {"n=2","n=3","n=4"},
            {"Σωστό", "Λάθος",},
            {"υλικού και ανάλυσης δεδομένων"," θεωρητική ","αρχείο "},
            {"γραμμικός","δισδιάστατος","μονοδιάστατος"}














    };

    private String correctanswers[] = {"Λάθος", "Λάθος", "Σωστό","Στατική","ΓΙΑ...ΑΠΟ...ΜΕΧΡΙ","Λάθος","Σωστό","FIFO(FIRST IN FIRST OUT)","Σωστό","Λάθος","Λάθος","Σωστό","Σωστό","Λάθος","Σωστό"," s=14  p=36 ","n=4","Λάθος","υλικού και ανάλυσης δεδομένων","δισδιάστατος"};


    public String getquestion(int a){
        String question=multipleQuestions[a];
        return question;

    }

    public int getanswerslength(int a){
        int answerslength=manswers[a].length;
        return answerslength;

    }


    public String getchoice1(int a){

        String choice0=manswers[a][0];
        return choice0;
    }


    public String getchoice2(int a){

        String choice1=manswers[a][1];
        return choice1;
    }

    public String getchoice3(int a) {

        String choice2 = manswers[a][2];
        return choice2;

    }

    public int getlength(){

        int a=multipleQuestions.length;
        return a;

    }


    public String getCorrectAnswer(int a){

        String answer=correctanswers[a];
        return answer;
    }

    public void suffle(){
        long seed = System.nanoTime();

        Collections.shuffle(Arrays.asList(multipleQuestions),new Random(seed));
        Collections.shuffle(Arrays.asList(manswers),new Random(seed));
        Collections.shuffle(Arrays.asList(correctanswers),new Random(seed));


    }
}
